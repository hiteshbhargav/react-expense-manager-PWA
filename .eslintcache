[{"G:\\projects\\react\\react-expense-manager-PWA\\src\\index.js":"1","G:\\projects\\react\\react-expense-manager-PWA\\src\\App.js":"2","G:\\projects\\react\\react-expense-manager-PWA\\src\\reportWebVitals.js":"3","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\home\\Home.js":"4","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\account\\Account.js":"5","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Balance.js":"6","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\Cards.js":"7","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Navbar.js":"8","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\Transactions.js":"9","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Account.js":"10","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Home\\Home.js":"11","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\Cards.js":"12","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\AddNewCard.js":"13","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\CardsHome.js":"14","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\AddNewCard.js":"15","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\ModalInput.js":"16","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\InputField.js":"17","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\New.js":"18","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\TransactionsHome.js":"19","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalInput.js":"20","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\InputField.js":"21","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalTransactionDetails.js":"22","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\New.js":"23","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\BalanceHome.js":"24","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Balance.js":"25","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Tip.js":"26","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Tip.js":"27","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Login\\Login.js":"28","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Signup\\Signup.js":"29","G:\\projects\\react\\react-expense-manager-PWA\\src\\firebase.js":"30","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Navbar\\AccountNavbar.js":"31","G:\\projects\\react\\react-expense-manager-PWA\\src\\Loading.js":"32","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Profile.js":"33"},{"size":517,"mtime":1610633499500,"results":"34","hashOfConfig":"35"},{"size":8475,"mtime":1618649928905,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1610633499500,"results":"37","hashOfConfig":"35"},{"size":239,"mtime":1615473719693,"results":"38","hashOfConfig":"35"},{"size":114,"mtime":1615468499922,"results":"39","hashOfConfig":"35"},{"size":1893,"mtime":1615474841078,"results":"40","hashOfConfig":"35"},{"size":4175,"mtime":1615470516920,"results":"41","hashOfConfig":"35"},{"size":1726,"mtime":1618074281544,"results":"42","hashOfConfig":"35"},{"size":4775,"mtime":1618040610249,"results":"43","hashOfConfig":"35"},{"size":288,"mtime":1618645774476,"results":"44","hashOfConfig":"35"},{"size":239,"mtime":1615473719693,"results":"45","hashOfConfig":"35"},{"size":4175,"mtime":1615470516920,"results":"46","hashOfConfig":"35"},{"size":8616,"mtime":1615470269387,"results":"47","hashOfConfig":"35"},{"size":383,"mtime":1615470676764,"results":"48","hashOfConfig":"35"},{"size":8468,"mtime":1618650501182,"results":"49","hashOfConfig":"35"},{"size":1379,"mtime":1615471122494,"results":"50","hashOfConfig":"35"},{"size":8274,"mtime":1615473937958,"results":"51","hashOfConfig":"35"},{"size":406,"mtime":1615475168733,"results":"52","hashOfConfig":"35"},{"size":475,"mtime":1618640013426,"results":"53","hashOfConfig":"35"},{"size":1328,"mtime":1618637024495,"results":"54","hashOfConfig":"35"},{"size":8696,"mtime":1618650405165,"results":"55","hashOfConfig":"35"},{"size":2348,"mtime":1618643477761,"results":"56","hashOfConfig":"35"},{"size":406,"mtime":1615475168733,"results":"57","hashOfConfig":"35"},{"size":232,"mtime":1615473702422,"results":"58","hashOfConfig":"35"},{"size":1924,"mtime":1616046109494,"results":"59","hashOfConfig":"35"},{"size":474,"mtime":1615473697061,"results":"60","hashOfConfig":"35"},{"size":474,"mtime":1615473697061,"results":"61","hashOfConfig":"35"},{"size":4884,"mtime":1618649961481,"results":"62","hashOfConfig":"35"},{"size":6167,"mtime":1618649808250,"results":"63","hashOfConfig":"35"},{"size":1065,"mtime":1618636244476,"results":"64","hashOfConfig":"35"},{"size":1026,"mtime":1618636742083,"results":"65","hashOfConfig":"35"},{"size":163,"mtime":1618639190179,"results":"66","hashOfConfig":"35"},{"size":3049,"mtime":1618650613618,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1kqb6u",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\projects\\react\\react-expense-manager-PWA\\src\\index.js",[],["140","141"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\App.js",["142"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\reportWebVitals.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\home\\Home.js",[],["143","144"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\account\\Account.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Balance.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\Cards.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Navbar.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\Transactions.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Account.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Home\\Home.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\Cards.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\AddNewCard.js",["145","146","147","148"],"import React, { useState } from \"react\";\r\nimport AddNew from \"../../icons/addNew.png\";\r\n\r\nconst AddNewCard = ({ handleAddNewCard }) => {\r\n  // const [cards, setCards] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [validFrom, setValidFrom] = useState(\"\");\r\n  const [validUpto, setValidUpto] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmitAddNewCard = () => {\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    const newCardObj = {\r\n      id: randomID,\r\n      number: cardNumber,\r\n      holder: cardHolder,\r\n      category: category,\r\n      type: type,\r\n      from: validFrom,\r\n      upto: validUpto,\r\n    };\r\n    if (\r\n      cardNumber.length === 16 &&\r\n      cardHolder.length > 2 &&\r\n      category &&\r\n      type &&\r\n      validFrom.length === 2 &&\r\n      validUpto.length === 2\r\n    ) {\r\n      console.log(\"success\");\r\n      handleAddNewCard(newCardObj);\r\n    } else {\r\n      console.log(\"Please enter correct values\");\r\n      setError(true);\r\n    }\r\n    setCardNumber(\"\");\r\n    setCardHolder(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setValidFrom(\"\");\r\n    setValidUpto(\"\");\r\n\r\n    // console.log(newCardObj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"fixed\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#add-new-card\"\r\n        >\r\n          <img src={AddNew} alt=\"\" width=\"25px\" />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"add-new-card\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"add-new-card\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Add a new Card\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Number\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardNumber}\r\n                    onChange={(e) => setCardNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Holder Name\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"text\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardHolder}\r\n                    onChange={(e) => setCardHolder(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"visa\">Visa</option>\r\n                    <option value=\"mastercard\">Mastercard</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"rupay\">Rupay</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Type of Card\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid From\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validFrom}\r\n                    onChange={(e) => setValidFrom(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid Upto\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validUpto}\r\n                    onChange={(e) => setValidUpto(e.target.value)}\r\n                  />\r\n                </div>\r\n                {error && (\r\n                  <small className=\"text-danger\">\r\n                    Please Enter Correct Values\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={handleSubmitAddNewCard}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => setError(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCard;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\CardsHome.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\AddNewCard.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\InputField.js",["149","150","151"],"import React, { useState } from \"react\";\r\n\r\nconst InputField = ({ transaction, cards }) => {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [expenseOption, setExpenseOption] = useState(false);\r\n  const [mode, setMode] = useState(\"Cash\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleInputName = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n\r\n  const handleInputAmount = (e) => {\r\n    setInputAmount(e.target.value);\r\n  };\r\n\r\n  const handleType = (e) => {\r\n    setType(e.target.value);\r\n    if (e.target.value === \"expense\") {\r\n      setExpenseOption(true);\r\n    } else {\r\n      setExpenseOption(false);\r\n    }\r\n  };\r\n\r\n  const handleMode = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // check if input field is empty\r\n    if (\r\n      !inputName ||\r\n      (/^\\s*$/.test(inputName) && !inputAmount) ||\r\n      (/^\\s*$/.test(inputAmount) && !type) ||\r\n      (/^\\s*$/.test(type) && !description) ||\r\n      /^\\s*$/.test(description)\r\n    ) {\r\n      setError(\"Fields Can't remain empty\");\r\n      return;\r\n    }\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    let asd = new Date().toLocaleDateString(\"en-US\").split(\"/\");\r\n    let dateObj = { day: asd[1], month: asd[0], year: asd[2] };\r\n    // let months = [\r\n    //   \"null\",\r\n    //   \"January\",\r\n    //   \"February\",\r\n    //   \"March\",\r\n    //   \"April\",\r\n    //   \"May\",\r\n    //   \"June\",\r\n    //   \"July\",\r\n    //   \"August\",\r\n    //   \"September\",\r\n    //   \"October\",\r\n    //   \"November\",\r\n    //   \"December\",\r\n    // ];\r\n    const monthArr = [\r\n      \"null\",\r\n      \"01\",\r\n      \"02\",\r\n      \"03\",\r\n      \"04\",\r\n      \"05\",\r\n      \"06\",\r\n      \"07\",\r\n      \"08\",\r\n      \"09\",\r\n      \"10\",\r\n      \"11\",\r\n      \"12\",\r\n    ];\r\n    const timeStamp = `${dateObj.year}-${monthArr[dateObj.month]}-${\r\n      dateObj.day\r\n    }`;\r\n    const newTransaction = {\r\n      id: randomID,\r\n      name: inputName,\r\n      amount: Number(inputAmount),\r\n      type: type,\r\n      mode: mode,\r\n      description: description,\r\n      category: category,\r\n      timeStamp: timeStamp,\r\n    };\r\n\r\n    console.log(newTransaction);\r\n\r\n    transaction(newTransaction);\r\n\r\n    setInputName(\"\");\r\n    setInputAmount(\"\");\r\n    setType(\"\");\r\n    setMode(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <div className=\"col col-lg-6 col-md-6 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Name\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={inputName}\r\n            onChange={(e) => handleInputName(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-6 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Amount\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"number\"\r\n            className={[\"form-control\"]}\r\n            value={inputAmount}\r\n            onChange={(e) => handleInputAmount(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 mt-auto col-6 position-relative\">\r\n          <div className=\"mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"5px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Type\r\n            </small>\r\n            <select\r\n              style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={type}\r\n              onChange={(e) => handleType(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"income\">Income</option>\r\n              <option value=\"expense\">Expense</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {expenseOption && (\r\n          <div className=\"col col-lg-3 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Mode\r\n            </small>\r\n            <select\r\n              style={{\r\n                border: \"1px solid black\",\r\n                padding: \"10px\",\r\n                wordSpacing: \"15px\",\r\n              }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={mode}\r\n              onChange={(e) => handleMode(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              {cards.length > 0 ? (\r\n                cards.map((card) => {\r\n                  const cardDetail = `${card.type} **** ${card.number.slice(\r\n                    -4\r\n                  )}`;\r\n                  return (\r\n                    <option value={card.number} key={card.number}>\r\n                      {cardDetail}\r\n                    </option>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3>No Cards Added</h3>\r\n              )}\r\n            </select>\r\n          </div>\r\n        )}\r\n        <div className=\"col col-lg-4 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Description\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={handleDescription}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 col-md-2 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Category\r\n          </small>\r\n          <select\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"form-select m-auto\"\r\n            id=\"inputGroupSelect02\"\r\n            value={category}\r\n            onChange={(e) => handleCategory(e)}\r\n          >\r\n            <option>Select</option>\r\n            <option value=\"wifi\">Wifi</option>\r\n            <option value=\"water\">Water</option>\r\n            <option value=\"tv\">Tv</option>\r\n            <option value=\"electricity\">Electricity</option>\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"shopping\">Shopping</option>\r\n            <option value=\"movie\">Movie</option>\r\n            <option value=\"mobile-recharge\">Mobile recharge</option>\r\n            <option value=\"train\">Train</option>\r\n            <option value=\"flight\">Flight</option>\r\n            <option value=\"bus\">Bus</option>\r\n            <option value=\"credit-card-bill\">Credit Card Bill</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </div>\r\n        <small className=\"text-danger fw-bold\">{error}</small>\r\n        <div className=\"col col-lg-1 col-md-2 col-sm-3 mt-auto\">\r\n          <button className=\"btn border-secondary mt-3\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\New.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\TransactionsHome.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\InputField.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalTransactionDetails.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\New.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\BalanceHome.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Balance.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Tip.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Tip.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Login\\Login.js",["152"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Signup\\Signup.js",["153","154"],"import React, { useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { auth, firestore } from \"../../../firebase\";\r\nimport \"./Signup.css\";\r\nimport moment from \"moment\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const [signup, setSignup] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(false);\r\n  const [serverError, setServerError] = useState(false);\r\n  const [serverErrorText, setServerErrorText] = useState(\"\");\r\n  const [firstNameError, setFirstNameError] = useState(\"\");\r\n  const [lastNameError, setLastNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const signupSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(false);\r\n    setFirstNameError(\"\");\r\n    setLastNameError(\"\");\r\n\r\n    if (signup.firstName === \"\") {\r\n      setError(true);\r\n      setFirstNameError(\"First name can't remain empty\");\r\n    }\r\n    if (signup.lastName === \"\") {\r\n      setError(true);\r\n      setLastNameError(\"First name can't remain empty\");\r\n    }\r\n    if (signup.email === \"\") {\r\n      setError(true);\r\n      setEmailError(\"Please select an Email\");\r\n    }\r\n    if (signup.email.length > 0) {\r\n      setError(false);\r\n      setEmailError(\"\");\r\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (!re.test(String(signup.email).toLowerCase())) {\r\n        setError(true);\r\n        setEmailError(\"Enter a valid Email\");\r\n      }\r\n    }\r\n    if (signup.password === \"\") {\r\n      setError(true);\r\n      setPasswordError(\"Enter a password\");\r\n    }\r\n    // if (signup.password) {\r\n    //   setError(false);\r\n    //   const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*d)(?=.*[@$!%*?&])[A-Za-zd@$!%*?&]{8,10}$/;\r\n    //   if (!re.test(String(signup.password))) {\r\n    //     setError(true);\r\n    //     setPasswordError(\r\n    //       \"Password must contain Minimum eight and maximum 10 characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\r\n    //     );\r\n    //   }\r\n    //}\r\n    const signupCred = {\r\n      firstName: signup.firstName,\r\n      lastName: signup.lastName,\r\n      email: signup.email,\r\n      password: signup.password,\r\n    };\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(signupCred.email, signupCred.password)\r\n      .then((data) => data.user.email)\r\n      .then(async (email) => {\r\n        const newUser = {\r\n          firstName: signup.firstName,\r\n          lastName: signup.lastName,\r\n          email: email,\r\n          createAt: moment().format(),\r\n        };\r\n        await firestore.collection(`users`).doc(email).set(newUser);\r\n        window.location.reload();\r\n        alert(\"signup success\");\r\n        setTimeout(() => {\r\n          history.push(\"/\");\r\n        }, 2500);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={signupSubmit}\r\n        className=\"row  d-flex mb-5 w-100 align-items-center justify-content-center\"\r\n      >\r\n        <div className=\"col col-lg-6 col-10\" style={{ width: \"95%\" }}>\r\n          <div className=\"display-4 my-5\">Signup</div>\r\n          <div className=\"row\">\r\n            <div className=\"form-group col-6\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control border-dark my-2 bg-transparent\"\r\n                name=\"firstName\"\r\n                value={signup.firstName}\r\n                onChange={(e) =>\r\n                  setSignup({ ...signup, firstName: e.target.value.trim() })\r\n                }\r\n              />\r\n              {error && <small className=\"text-danger\">{firstNameError}</small>}\r\n            </div>\r\n            <div className=\"form-group col-6\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control border-dark my-2 bg-transparent\"\r\n                value={signup.lastName}\r\n                onChange={(e) =>\r\n                  setSignup({ ...signup, lastName: e.target.value.trim() })\r\n                }\r\n              />\r\n              {error && <small className=\"text-danger\">{lastNameError}</small>}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input\r\n              className=\"form-control border-dark my-2 bg-transparent\"\r\n              aria-describedby=\"emailHelp\"\r\n              value={signup.email}\r\n              onChange={(event) =>\r\n                setSignup({ ...signup, email: event.target.value.trim() })\r\n              }\r\n            />\r\n            {error && <small className=\"text-danger\">{emailError}</small>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control border-dark my-2 bg-transparent\"\r\n              id=\"exampleInputPassword1\"\r\n              value={signup.password}\r\n              onChange={(event) =>\r\n                setSignup({ ...signup, password: event.target.value.trim() })\r\n              }\r\n            />\r\n            {error && <small className=\"text-danger\">{passwordError}</small>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <NavLink\r\n              className=\"form-check-label link-secondary text-decoration-none\"\r\n              id=\"exampleInput\"\r\n              exact\r\n              to=\"/\"\r\n            >\r\n              Already a user? Login\r\n            </NavLink>\r\n          </div>\r\n          {serverError && <small>{serverErrorText}</small>} <br />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn text-white border-light my-3 py-2 px-4\"\r\n          >\r\n            Submit\r\n          </button>\r\n          <br />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\firebase.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Navbar\\AccountNavbar.js",["155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport Logout from \"../../../icons/exit.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { firestore, auth } from \"../../../firebase\";\r\n\r\nconst AccountNavbar = ({ user }) => {\r\n  const [email, setEmail] = useState(\"usersname\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setEmail(user.email);\r\n    firestore\r\n      .collection(`/users`)\r\n      .doc(`${email}`)\r\n      .get(async (snapshot) => {\r\n        console.log(await snapshot.docs);\r\n      });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    auth.signOut().then(() => {\r\n      alert(\"Logged out success\");\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-3 d-flex justify-content-between align-items-center\">\r\n      <h4 className=\"m-0\">Welcome, {email}</h4>\r\n      <button className=\"btn text-light m-0\">\r\n        <img src={Logout} alt=\"\" width=\"25px\" onClick={logout} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountNavbar;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\Loading.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Profile.js",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":15},{"ruleId":"158","replacedBy":"166"},{"ruleId":"160","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":98,"column":21,"nodeType":"170","endLine":98,"endColumn":49},{"ruleId":"168","severity":1,"message":"169","line":118,"column":21,"nodeType":"170","endLine":118,"endColumn":49},{"ruleId":"168","severity":1,"message":"169","line":186,"column":21,"nodeType":"170","endLine":186,"endColumn":45},{"ruleId":"168","severity":1,"message":"169","line":206,"column":21,"nodeType":"170","endLine":206,"endColumn":45},{"ruleId":"168","severity":1,"message":"169","line":128,"column":13,"nodeType":"170","endLine":128,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":144,"column":13,"nodeType":"170","endLine":144,"endColumn":41},{"ruleId":"168","severity":1,"message":"169","line":219,"column":13,"nodeType":"170","endLine":219,"endColumn":37},{"ruleId":"162","severity":1,"message":"171","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"172","line":17,"column":23,"nodeType":"164","messageId":"165","endLine":17,"endColumn":37},{"ruleId":"162","severity":1,"message":"173","line":18,"column":27,"nodeType":"164","messageId":"165","endLine":18,"endColumn":45},{"ruleId":"162","severity":1,"message":"174","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":18,"column":6,"nodeType":"177","endLine":18,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":12,"column":17,"nodeType":"181","endLine":17,"endColumn":19},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar",["182"],["183"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","'setServerError' is assigned a value but never used.","'setServerErrorText' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'email' and 'user.email'. Either include them or remove the dependency array. If 'setEmail' needs the current value of 'user.email', you can also switch to useReducer instead of useState and read 'user.email' in the reducer.","ArrayExpression",["184"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [email, user.email]",{"range":"187","text":"188"},[539,541],"[email, user.email]"]