[{"G:\\projects\\react\\react-expense-manager\\src\\index.js":"1","G:\\projects\\react\\react-expense-manager\\src\\reportWebVitals.js":"2","G:\\projects\\react\\react-expense-manager\\src\\App.js":"3","G:\\projects\\react\\react-expense-manager\\src\\components\\ModalInput.js":"4","G:\\projects\\react\\react-expense-manager\\src\\components\\Tabs.js":"5","G:\\projects\\react\\react-expense-manager\\src\\components\\AddNewCard.js":"6","G:\\projects\\react\\react-expense-manager\\src\\components\\Account.js":"7","G:\\projects\\react\\react-expense-manager\\src\\components\\Cards.js":"8","G:\\projects\\react\\react-expense-manager\\src\\components\\ShowTransactions.js":"9","G:\\projects\\react\\react-expense-manager\\src\\components\\InputField.js":"10","G:\\projects\\react\\react-expense-manager\\src\\components\\Home.js":"11","G:\\projects\\react\\react-expense-manager\\src\\components\\Total.js":"12","G:\\projects\\react\\react-expense-manager\\src\\components\\New.js":"13","G:\\projects\\react\\react-expense-manager\\src\\components\\ModalTransactionDetail.js":"14","G:\\projects\\react\\react-expense-manager\\src\\components\\Balance.js":"15","G:\\projects\\react\\react-expense-manager\\src\\components\\Tip.js":"16","G:\\projects\\react\\react-expense-manager\\src\\components\\Navbar.js":"17"},{"size":500,"mtime":1608464722391,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608464722391,"results":"20","hashOfConfig":"19"},{"size":2557,"mtime":1609687911091,"results":"21","hashOfConfig":"19"},{"size":1324,"mtime":1609573487651,"results":"22","hashOfConfig":"19"},{"size":3050,"mtime":1609683160952,"results":"23","hashOfConfig":"19"},{"size":8383,"mtime":1609687861870,"results":"24","hashOfConfig":"19"},{"size":101,"mtime":1609593593194,"results":"25","hashOfConfig":"19"},{"size":3315,"mtime":1609687783553,"results":"26","hashOfConfig":"19"},{"size":4296,"mtime":1609687461917,"results":"27","hashOfConfig":"19"},{"size":8083,"mtime":1609609916896,"results":"28","hashOfConfig":"19"},{"size":245,"mtime":1609687270257,"results":"29","hashOfConfig":"19"},{"size":488,"mtime":1609594393617,"results":"30","hashOfConfig":"19"},{"size":398,"mtime":1609573155999,"results":"31","hashOfConfig":"19"},{"size":1131,"mtime":1609421244924,"results":"32","hashOfConfig":"19"},{"size":1893,"mtime":1609687246722,"results":"33","hashOfConfig":"19"},{"size":439,"mtime":1609249679618,"results":"34","hashOfConfig":"19"},{"size":1136,"mtime":1609687285344,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yixkg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"G:\\projects\\react\\react-expense-manager\\src\\index.js",[],["74","75"],"G:\\projects\\react\\react-expense-manager\\src\\reportWebVitals.js",[],"G:\\projects\\react\\react-expense-manager\\src\\App.js",["76","77","78","79","80"],"G:\\projects\\react\\react-expense-manager\\src\\components\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Tabs.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\AddNewCard.js",["81","82","83","84","85","86","87"],"import React, { useState } from \"react\";\r\nimport AddNew from \"../icons/addNew.png\";\r\n\r\nconst AddNewCard = ({ cards, setCards }) => {\r\n  // const [cards, setCards] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [validFrom, setValidFrom] = useState(\"\");\r\n  const [validUpto, setValidUpto] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmitAddNewCard = () => {\r\n    const newCardObj = {\r\n      number: cardNumber,\r\n      holder: cardHolder,\r\n      category: category,\r\n      type: type,\r\n      from: validFrom,\r\n      upto: validUpto,\r\n    };\r\n    if (\r\n      cardNumber.length == 16 &&\r\n      cardHolder.length > 2 &&\r\n      category &&\r\n      type &&\r\n      validFrom.length == 2 &&\r\n      validUpto.length == 2\r\n    ) {\r\n      console.log(\"success\");\r\n      setCards([newCardObj, ...cards]);\r\n    } else {\r\n      console.log(\"Please enter correct values\");\r\n      setError(true);\r\n    }\r\n\r\n    setCardNumber(\"\");\r\n    setCardHolder(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setValidFrom(\"\");\r\n    setValidUpto(\"\");\r\n\r\n    // console.log(newCardObj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"fixed\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#add-new-card\"\r\n        >\r\n          <img src={AddNew} alt=\"\" width=\"25px\" />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"add-new-card\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"add-new-card\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Add a new Card\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Number\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardNumber}\r\n                    onChange={(e) => setCardNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Holder Name\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"text\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardHolder}\r\n                    onChange={(e) => setCardHolder(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"visa\">Visa</option>\r\n                    <option value=\"mastercard\">Mastercard</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"rupay\">Rupay</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Type of Card\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid From\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validFrom}\r\n                    onChange={(e) => setValidFrom(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid Upto\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validUpto}\r\n                    onChange={(e) => setValidUpto(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {error && (\r\n                <small className=\"text-danger\">\r\n                  Please Enter Correct Values\r\n                </small>\r\n              )}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={handleSubmitAddNewCard}\r\n              >\r\n                Submit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => setError(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCard;\r\n","G:\\projects\\react\\react-expense-manager\\src\\components\\Account.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Cards.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\ShowTransactions.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\InputField.js",["88","89","90"],"import React, { useState } from \"react\";\r\n\r\nconst InputField = ({ transaction, cards }) => {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [expenseOption, setExpenseOption] = useState(false);\r\n  const [mode, setMode] = useState(\"Cash\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const handleInputName = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n\r\n  const handleInputAmount = (e) => {\r\n    setInputAmount(e.target.value);\r\n  };\r\n\r\n  const handleType = (e) => {\r\n    setType(e.target.value);\r\n    if (e.target.value === \"expense\") {\r\n      setExpenseOption(true);\r\n    } else {\r\n      setExpenseOption(false);\r\n    }\r\n  };\r\n\r\n  const handleMode = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // check if input field is empty\r\n    if (\r\n      !inputName ||\r\n      (/^\\s*$/.test(inputName) && !inputAmount) ||\r\n      (/^\\s*$/.test(inputAmount) && !type) ||\r\n      (/^\\s*$/.test(type) && !description) ||\r\n      /^\\s*$/.test(description)\r\n    ) {\r\n      alert(\"Fields Can't remain empty\");\r\n      return;\r\n    }\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    let asd = new Date().toLocaleDateString(\"en-US\").split(\"/\");\r\n    let dateObj = { day: asd[1], month: asd[0], year: asd[2] };\r\n    // let months = [\r\n    //   \"null\",\r\n    //   \"January\",\r\n    //   \"February\",\r\n    //   \"March\",\r\n    //   \"April\",\r\n    //   \"May\",\r\n    //   \"June\",\r\n    //   \"July\",\r\n    //   \"August\",\r\n    //   \"September\",\r\n    //   \"October\",\r\n    //   \"November\",\r\n    //   \"December\",\r\n    // ];\r\n    const monthArr = [\r\n      \"null\",\r\n      \"01\",\r\n      \"02\",\r\n      \"03\",\r\n      \"04\",\r\n      \"05\",\r\n      \"06\",\r\n      \"07\",\r\n      \"08\",\r\n      \"09\",\r\n      \"10\",\r\n      \"11\",\r\n      \"12\",\r\n    ];\r\n    const timeStamp = `${dateObj.year}-${monthArr[dateObj.month]}-${\r\n      dateObj.day\r\n    }`;\r\n    const newTransaction = {\r\n      id: randomID,\r\n      name: inputName,\r\n      amount: inputAmount,\r\n      type: type,\r\n      mode: mode,\r\n      description: description,\r\n      category: category,\r\n      timeStamp: timeStamp,\r\n    };\r\n\r\n    console.log(newTransaction);\r\n\r\n    transaction(newTransaction);\r\n    setInputName(\"\");\r\n    setInputAmount(\"\");\r\n    setType(\"\");\r\n    setMode(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <div className=\"col col-lg-6 col-md-6 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Name\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={inputName}\r\n            onChange={(e) => handleInputName(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-6 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Amount\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"number\"\r\n            className={[\"form-control\"]}\r\n            value={inputAmount}\r\n            onChange={(e) => handleInputAmount(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 mt-auto col-6 position-relative\">\r\n          <div className=\"mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"5px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Type\r\n            </small>\r\n            <select\r\n              style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={type}\r\n              onChange={(e) => handleType(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"income\">Income</option>\r\n              <option value=\"expense\">Expense</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {expenseOption && (\r\n          <div className=\"col col-lg-3 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Mode\r\n            </small>\r\n            <select\r\n              style={{\r\n                border: \"1px solid black\",\r\n                padding: \"10px\",\r\n                wordSpacing: \"15px\",\r\n              }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={mode}\r\n              onChange={(e) => handleMode(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              {cards.length > 0 ? (\r\n                cards.map((card) => {\r\n                  const cardDetail = `${card.cardType} **** ${card.number.slice(\r\n                    -4\r\n                  )}`;\r\n                  return (\r\n                    <option value={card.number} key={card.number}>\r\n                      {cardDetail}\r\n                    </option>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3>No Cards Added</h3>\r\n              )}\r\n            </select>\r\n          </div>\r\n        )}\r\n        <div className=\"col col-lg-4 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Description\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={handleDescription}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 col-md-2 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Category\r\n          </small>\r\n          <select\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"form-select m-auto\"\r\n            id=\"inputGroupSelect02\"\r\n            value={category}\r\n            onChange={(e) => handleCategory(e)}\r\n          >\r\n            <option>Select</option>\r\n            <option value=\"wifi\">Wifi</option>\r\n            <option value=\"water\">Water</option>\r\n            <option value=\"tv\">Tv</option>\r\n            <option value=\"electricity\">Electricity</option>\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"shopping\">Shopping</option>\r\n            <option value=\"movie\">Movie</option>\r\n            <option value=\"mobile-recharge\">Mobile recharge</option>\r\n            <option value=\"train\">Train</option>\r\n            <option value=\"flight\">Flight</option>\r\n            <option value=\"bus\">Bus</option>\r\n            <option value=\"credit-card-bill\">Credit Card Bill</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col col-lg-1 col-md-2 col-sm-3 mt-auto\">\r\n          <button className=\"btn border-secondary mt-3\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","G:\\projects\\react\\react-expense-manager\\src\\components\\Home.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Total.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\New.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\ModalTransactionDetail.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Balance.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Tip.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Navbar.js",["91"],"import React from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navigation w-100\">\r\n        <ul className=\"d-flex justify-content-between p-0 my-auto \">\r\n          <li className=\"list-group-item bg-transparent border\">\r\n            <Link className=\"btn btn-outline-secondary\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/transactions\">\r\n              Transactions\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/cards\">\r\n              Cards\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/account\">\r\n              Account\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":5,"column":17,"nodeType":"98","messageId":"99","endLine":5,"endColumn":30},{"ruleId":"96","severity":1,"message":"102","line":5,"column":32,"nodeType":"98","messageId":"99","endLine":5,"endColumn":38},{"ruleId":"96","severity":1,"message":"103","line":9,"column":17,"nodeType":"98","messageId":"99","endLine":9,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":24,"column":25,"nodeType":"106","messageId":"107","endLine":24,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":28,"column":24,"nodeType":"106","messageId":"107","endLine":28,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":29,"column":24,"nodeType":"106","messageId":"107","endLine":29,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":97,"column":21,"nodeType":"110","endLine":97,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":117,"column":21,"nodeType":"110","endLine":117,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":185,"column":21,"nodeType":"110","endLine":185,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":205,"column":21,"nodeType":"110","endLine":205,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":125,"column":13,"nodeType":"110","endLine":125,"endColumn":37},{"ruleId":"108","severity":1,"message":"109","line":141,"column":13,"nodeType":"110","endLine":141,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":216,"column":13,"nodeType":"110","endLine":216,"endColumn":37},{"ruleId":"96","severity":1,"message":"111","line":2,"column":25,"nodeType":"98","messageId":"99","endLine":2,"endColumn":35},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'setCards' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]