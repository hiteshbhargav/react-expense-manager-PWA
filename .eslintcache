[{"G:\\projects\\react\\react-expense-manager\\src\\index.js":"1","G:\\projects\\react\\react-expense-manager\\src\\reportWebVitals.js":"2","G:\\projects\\react\\react-expense-manager\\src\\App.js":"3","G:\\projects\\react\\react-expense-manager\\src\\components\\ModalInput.js":"4","G:\\projects\\react\\react-expense-manager\\src\\components\\Tabs.js":"5","G:\\projects\\react\\react-expense-manager\\src\\components\\AddNewCard.js":"6","G:\\projects\\react\\react-expense-manager\\src\\components\\Account.js":"7","G:\\projects\\react\\react-expense-manager\\src\\components\\Cards.js":"8","G:\\projects\\react\\react-expense-manager\\src\\components\\ShowTransactions.js":"9","G:\\projects\\react\\react-expense-manager\\src\\components\\InputField.js":"10","G:\\projects\\react\\react-expense-manager\\src\\components\\Home.js":"11","G:\\projects\\react\\react-expense-manager\\src\\components\\Total.js":"12","G:\\projects\\react\\react-expense-manager\\src\\components\\New.js":"13","G:\\projects\\react\\react-expense-manager\\src\\components\\ModalTransactionDetail.js":"14","G:\\projects\\react\\react-expense-manager\\src\\components\\Balance.js":"15","G:\\projects\\react\\react-expense-manager\\src\\components\\Tip.js":"16","G:\\projects\\react\\react-expense-manager\\src\\components\\Navbar.js":"17"},{"size":500,"mtime":1608464722391,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608464722391,"results":"20","hashOfConfig":"19"},{"size":4276,"mtime":1609762481699,"results":"21","hashOfConfig":"19"},{"size":1324,"mtime":1609757838986,"results":"22","hashOfConfig":"19"},{"size":3558,"mtime":1609762463337,"results":"23","hashOfConfig":"19"},{"size":8578,"mtime":1609761785319,"results":"24","hashOfConfig":"19"},{"size":101,"mtime":1609593593194,"results":"25","hashOfConfig":"19"},{"size":4052,"mtime":1609764923383,"results":"26","hashOfConfig":"19"},{"size":4703,"mtime":1609761009212,"results":"27","hashOfConfig":"19"},{"size":8223,"mtime":1609760373883,"results":"28","hashOfConfig":"19"},{"size":245,"mtime":1609745454958,"results":"29","hashOfConfig":"19"},{"size":488,"mtime":1609594393617,"results":"30","hashOfConfig":"19"},{"size":397,"mtime":1609747560632,"results":"31","hashOfConfig":"19"},{"size":2083,"mtime":1609760164302,"results":"32","hashOfConfig":"19"},{"size":1893,"mtime":1609687246722,"results":"33","hashOfConfig":"19"},{"size":491,"mtime":1609747482975,"results":"34","hashOfConfig":"19"},{"size":1136,"mtime":1609687285344,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yixkg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},"G:\\projects\\react\\react-expense-manager\\src\\index.js",[],["75","76"],"G:\\projects\\react\\react-expense-manager\\src\\reportWebVitals.js",[],"G:\\projects\\react\\react-expense-manager\\src\\App.js",["77"],"G:\\projects\\react\\react-expense-manager\\src\\components\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Tabs.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\AddNewCard.js",["78","79","80","81"],"G:\\projects\\react\\react-expense-manager\\src\\components\\Account.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Cards.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\ShowTransactions.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\InputField.js",["82","83","84"],"import React, { useState } from \"react\";\r\n\r\n\r\nconst InputField = ({ transaction, cards }) => {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [expenseOption, setExpenseOption] = useState(false);\r\n  const [mode, setMode] = useState(\"Cash\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleInputName = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n\r\n  const handleInputAmount = (e) => {\r\n    setInputAmount(e.target.value);\r\n  };\r\n\r\n  const handleType = (e) => {\r\n    setType(e.target.value);\r\n    if (e.target.value === \"expense\") {\r\n      setExpenseOption(true);\r\n    } else {\r\n      setExpenseOption(false);\r\n    }\r\n  };\r\n\r\n  const handleMode = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // check if input field is empty\r\n    if (\r\n      !inputName ||\r\n      (/^\\s*$/.test(inputName) && !inputAmount) ||\r\n      (/^\\s*$/.test(inputAmount) && !type) ||\r\n      (/^\\s*$/.test(type) && !description) ||\r\n      /^\\s*$/.test(description)\r\n    ) {\r\n      setError(\"Fields Can't remain empty\");\r\n      return;\r\n    }\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    let asd = new Date().toLocaleDateString(\"en-US\").split(\"/\");\r\n    let dateObj = { day: asd[1], month: asd[0], year: asd[2] };\r\n    // let months = [\r\n    //   \"null\",\r\n    //   \"January\",\r\n    //   \"February\",\r\n    //   \"March\",\r\n    //   \"April\",\r\n    //   \"May\",\r\n    //   \"June\",\r\n    //   \"July\",\r\n    //   \"August\",\r\n    //   \"September\",\r\n    //   \"October\",\r\n    //   \"November\",\r\n    //   \"December\",\r\n    // ];\r\n    const monthArr = [\r\n      \"null\",\r\n      \"01\",\r\n      \"02\",\r\n      \"03\",\r\n      \"04\",\r\n      \"05\",\r\n      \"06\",\r\n      \"07\",\r\n      \"08\",\r\n      \"09\",\r\n      \"10\",\r\n      \"11\",\r\n      \"12\",\r\n    ];\r\n    const timeStamp = `${dateObj.year}-${monthArr[dateObj.month]}-${\r\n      dateObj.day\r\n    }`;\r\n    const newTransaction = {\r\n      id: randomID,\r\n      name: inputName,\r\n      amount: Number(inputAmount),\r\n      type: type,\r\n      mode: mode,\r\n      description: description,\r\n      category: category,\r\n      timeStamp: timeStamp,\r\n    };\r\n\r\n    console.log(newTransaction);\r\n\r\n    transaction(newTransaction);\r\n\r\n    setInputName(\"\");\r\n    setInputAmount(\"\");\r\n    setType(\"\");\r\n    setMode(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <div className=\"col col-lg-6 col-md-6 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Name\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={inputName}\r\n            onChange={(e) => handleInputName(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-6 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Amount\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"number\"\r\n            className={[\"form-control\"]}\r\n            value={inputAmount}\r\n            onChange={(e) => handleInputAmount(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 mt-auto col-6 position-relative\">\r\n          <div className=\"mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"5px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Type\r\n            </small>\r\n            <select\r\n              style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={type}\r\n              onChange={(e) => handleType(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"income\">Income</option>\r\n              <option value=\"expense\">Expense</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {expenseOption && (\r\n          <div className=\"col col-lg-3 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Mode\r\n            </small>\r\n            <select\r\n              style={{\r\n                border: \"1px solid black\",\r\n                padding: \"10px\",\r\n                wordSpacing: \"15px\",\r\n              }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={mode}\r\n              onChange={(e) => handleMode(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              {cards.length > 0 ? (\r\n                cards.map((card) => {\r\n                  const cardDetail = `${card.type} **** ${card.number.slice(\r\n                    -4\r\n                  )}`;\r\n                  return (\r\n                    <option value={card.number} key={card.number}>\r\n                      {cardDetail}\r\n                    </option>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3>No Cards Added</h3>\r\n              )}\r\n            </select>\r\n          </div>\r\n        )}\r\n        <div className=\"col col-lg-4 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Description\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={handleDescription}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 col-md-2 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Category\r\n          </small>\r\n          <select\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"form-select m-auto\"\r\n            id=\"inputGroupSelect02\"\r\n            value={category}\r\n            onChange={(e) => handleCategory(e)}\r\n          >\r\n            <option>Select</option>\r\n            <option value=\"wifi\">Wifi</option>\r\n            <option value=\"water\">Water</option>\r\n            <option value=\"tv\">Tv</option>\r\n            <option value=\"electricity\">Electricity</option>\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"shopping\">Shopping</option>\r\n            <option value=\"movie\">Movie</option>\r\n            <option value=\"mobile-recharge\">Mobile recharge</option>\r\n            <option value=\"train\">Train</option>\r\n            <option value=\"flight\">Flight</option>\r\n            <option value=\"bus\">Bus</option>\r\n            <option value=\"credit-card-bill\">Credit Card Bill</option>\r\n          </select>\r\n        </div>\r\n        <small className=\"text-danger fw-bold\">{error}</small>\r\n        <div className=\"col col-lg-1 col-md-2 col-sm-3 mt-auto\">\r\n          <button className=\"btn border-secondary mt-3\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","G:\\projects\\react\\react-expense-manager\\src\\components\\Home.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Total.js",[],["85","86"],"G:\\projects\\react\\react-expense-manager\\src\\components\\New.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\ModalTransactionDetail.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Balance.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Tip.js",[],"G:\\projects\\react\\react-expense-manager\\src\\components\\Navbar.js",["87"],"import React from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navigation w-100\">\r\n        <ul className=\"d-flex justify-content-between p-0 my-auto \">\r\n          <li className=\"list-group-item bg-transparent border\">\r\n            <Link className=\"btn btn-outline-secondary\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/transactions\">\r\n              Transactions\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/cards\">\r\n              Cards\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"list-group-item bg-transparent border \">\r\n            <NavLink className=\"btn btn-outline-secondary\" to=\"/account\">\r\n              Account\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",["88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":98,"column":21,"nodeType":"100","endLine":98,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":118,"column":21,"nodeType":"100","endLine":118,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":186,"column":21,"nodeType":"100","endLine":186,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":206,"column":21,"nodeType":"100","endLine":206,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":129,"column":13,"nodeType":"100","endLine":129,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":145,"column":13,"nodeType":"100","endLine":145,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":220,"column":13,"nodeType":"100","endLine":220,"endColumn":37},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","severity":1,"message":"103","line":2,"column":25,"nodeType":"96","messageId":"97","endLine":2,"endColumn":35},{"ruleId":"90","replacedBy":"104"},{"ruleId":"92","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'AddNewCard' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["106"],["107"],"'withRouter' is defined but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation"]