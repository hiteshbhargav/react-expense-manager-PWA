[{"G:\\projects\\react\\react-expense-manager-PWA\\src\\index.js":"1","G:\\projects\\react\\react-expense-manager-PWA\\src\\App.js":"2","G:\\projects\\react\\react-expense-manager-PWA\\src\\reportWebVitals.js":"3","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\home\\Home.js":"4","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\account\\Account.js":"5","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Balance.js":"6","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\Cards.js":"7","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Navbar.js":"8","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\Transactions.js":"9","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Account.js":"10","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Home\\Home.js":"11","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\Cards.js":"12","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\AddNewCard.js":"13","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\CardsHome.js":"14","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\AddNewCard.js":"15","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\ModalInput.js":"16","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\InputField.js":"17","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\New.js":"18","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\TransactionsHome.js":"19","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalInput.js":"20","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\InputField.js":"21","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalTransactionDetails.js":"22","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\New.js":"23","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\BalanceHome.js":"24","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Balance.js":"25","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Tip.js":"26","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Tip.js":"27","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Login\\Login.js":"28","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Signup\\Signup.js":"29"},{"size":517,"mtime":1610633499500,"results":"30","hashOfConfig":"31"},{"size":5663,"mtime":1615474673229,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1610633499500,"results":"33","hashOfConfig":"31"},{"size":239,"mtime":1615473719693,"results":"34","hashOfConfig":"31"},{"size":114,"mtime":1615468499922,"results":"35","hashOfConfig":"31"},{"size":1893,"mtime":1615474841078,"results":"36","hashOfConfig":"31"},{"size":4175,"mtime":1615470516920,"results":"37","hashOfConfig":"31"},{"size":1167,"mtime":1615474181923,"results":"38","hashOfConfig":"31"},{"size":4700,"mtime":1615472418020,"results":"39","hashOfConfig":"31"},{"size":114,"mtime":1615468499922,"results":"40","hashOfConfig":"31"},{"size":239,"mtime":1615473719693,"results":"41","hashOfConfig":"31"},{"size":4175,"mtime":1615470516920,"results":"42","hashOfConfig":"31"},{"size":8616,"mtime":1615470269387,"results":"43","hashOfConfig":"31"},{"size":383,"mtime":1615470676764,"results":"44","hashOfConfig":"31"},{"size":8616,"mtime":1615470269387,"results":"45","hashOfConfig":"31"},{"size":1379,"mtime":1615471122494,"results":"46","hashOfConfig":"31"},{"size":8274,"mtime":1615473937958,"results":"47","hashOfConfig":"31"},{"size":406,"mtime":1615475168733,"results":"48","hashOfConfig":"31"},{"size":518,"mtime":1615475098592,"results":"49","hashOfConfig":"31"},{"size":1379,"mtime":1615471122494,"results":"50","hashOfConfig":"31"},{"size":8274,"mtime":1615473937958,"results":"51","hashOfConfig":"31"},{"size":2083,"mtime":1615471163574,"results":"52","hashOfConfig":"31"},{"size":406,"mtime":1615475168733,"results":"53","hashOfConfig":"31"},{"size":232,"mtime":1615473702422,"results":"54","hashOfConfig":"31"},{"size":1893,"mtime":1615474841078,"results":"55","hashOfConfig":"31"},{"size":474,"mtime":1615473697061,"results":"56","hashOfConfig":"31"},{"size":474,"mtime":1615473697061,"results":"57","hashOfConfig":"31"},{"size":3151,"mtime":1615474508547,"results":"58","hashOfConfig":"31"},{"size":7824,"mtime":1615121657518,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1kqb6u",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\projects\\react\\react-expense-manager-PWA\\src\\index.js",[],["122","123"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\App.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\reportWebVitals.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\home\\Home.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\account\\Account.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Balance.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\Cards.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Navbar.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\Transactions.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Account.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Home\\Home.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\Cards.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\cards\\AddNewCard.js",["124","125","126","127"],"import React, { useState } from \"react\";\r\nimport AddNew from \"../../icons/addNew.png\";\r\n\r\nconst AddNewCard = ({ handleAddNewCard }) => {\r\n  // const [cards, setCards] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [validFrom, setValidFrom] = useState(\"\");\r\n  const [validUpto, setValidUpto] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmitAddNewCard = () => {\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    const newCardObj = {\r\n      id: randomID,\r\n      number: cardNumber,\r\n      holder: cardHolder,\r\n      category: category,\r\n      type: type,\r\n      from: validFrom,\r\n      upto: validUpto,\r\n    };\r\n    if (\r\n      cardNumber.length === 16 &&\r\n      cardHolder.length > 2 &&\r\n      category &&\r\n      type &&\r\n      validFrom.length === 2 &&\r\n      validUpto.length === 2\r\n    ) {\r\n      console.log(\"success\");\r\n      handleAddNewCard(newCardObj);\r\n    } else {\r\n      console.log(\"Please enter correct values\");\r\n      setError(true);\r\n    }\r\n    setCardNumber(\"\");\r\n    setCardHolder(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setValidFrom(\"\");\r\n    setValidUpto(\"\");\r\n\r\n    // console.log(newCardObj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"fixed\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#add-new-card\"\r\n        >\r\n          <img src={AddNew} alt=\"\" width=\"25px\" />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"add-new-card\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"add-new-card\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Add a new Card\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Number\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardNumber}\r\n                    onChange={(e) => setCardNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Holder Name\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"text\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardHolder}\r\n                    onChange={(e) => setCardHolder(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"visa\">Visa</option>\r\n                    <option value=\"mastercard\">Mastercard</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"rupay\">Rupay</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Type of Card\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid From\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validFrom}\r\n                    onChange={(e) => setValidFrom(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid Upto\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validUpto}\r\n                    onChange={(e) => setValidUpto(e.target.value)}\r\n                  />\r\n                </div>\r\n                {error && (\r\n                  <small className=\"text-danger\">\r\n                    Please Enter Correct Values\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={handleSubmitAddNewCard}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => setError(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCard;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\CardsHome.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Cards\\AddNewCard.js",["128","129","130","131","132"],"import React, { useState } from \"react\";\r\nimport AddNew from \"../../icons/addNew.png\";\r\n\r\nconst AddNewCard = ({ handleAddNewCard }) => {\r\n  // const [cards, setCards] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [validFrom, setValidFrom] = useState(\"\");\r\n  const [validUpto, setValidUpto] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmitAddNewCard = () => {\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    const newCardObj = {\r\n      id: randomID,\r\n      number: cardNumber,\r\n      holder: cardHolder,\r\n      category: category,\r\n      type: type,\r\n      from: validFrom,\r\n      upto: validUpto,\r\n    };\r\n    if (\r\n      cardNumber.length === 16 &&\r\n      cardHolder.length > 2 &&\r\n      category &&\r\n      type &&\r\n      validFrom.length === 2 &&\r\n      validUpto.length === 2\r\n    ) {\r\n      console.log(\"success\");\r\n      handleAddNewCard(newCardObj);\r\n    } else {\r\n      console.log(\"Please enter correct values\");\r\n      setError(true);\r\n    }\r\n    setCardNumber(\"\");\r\n    setCardHolder(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setValidFrom(\"\");\r\n    setValidUpto(\"\");\r\n\r\n    // console.log(newCardObj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"fixed\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#add-new-card\"\r\n        >\r\n          {/* <img src={AddNew} alt=\"add_new_card\" width=\"25px\" /> */}\r\n          asd\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"add-new-card\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"add-new-card\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Add a new Card\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Number\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardNumber}\r\n                    onChange={(e) => setCardNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Card Holder Name\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"text\"\r\n                    className={[\"form-control\"]}\r\n                    value={cardHolder}\r\n                    onChange={(e) => setCardHolder(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Category\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"visa\">Visa</option>\r\n                    <option value=\"mastercard\">Mastercard</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"rupay\">Rupay</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Type of Card\r\n                  </small>\r\n                  <select\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"form-select m-auto\"\r\n                    id=\"inputGroupSelect02\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid From\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validFrom}\r\n                    onChange={(e) => setValidFrom(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col col-lg-6 col-6 mt-3 position-relative\">\r\n                  <small\r\n                    className=\"position-absolute px-2\"\r\n                    style={{\r\n                      top: \"-10px\",\r\n                      left: \"20px\",\r\n                      backgroundColor: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Valid Upto\r\n                  </small>\r\n                  <input\r\n                    style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n                    className=\"m-auto\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={validUpto}\r\n                    onChange={(e) => setValidUpto(e.target.value)}\r\n                  />\r\n                </div>\r\n                {error && (\r\n                  <small className=\"text-danger\">\r\n                    Please Enter Correct Values\r\n                  </small>\r\n                )}\r\n              </div>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={handleSubmitAddNewCard}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => setError(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCard;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\InputField.js",["133","134","135"],"import React, { useState } from \"react\";\r\n\r\nconst InputField = ({ transaction, cards }) => {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [expenseOption, setExpenseOption] = useState(false);\r\n  const [mode, setMode] = useState(\"Cash\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleInputName = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n\r\n  const handleInputAmount = (e) => {\r\n    setInputAmount(e.target.value);\r\n  };\r\n\r\n  const handleType = (e) => {\r\n    setType(e.target.value);\r\n    if (e.target.value === \"expense\") {\r\n      setExpenseOption(true);\r\n    } else {\r\n      setExpenseOption(false);\r\n    }\r\n  };\r\n\r\n  const handleMode = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // check if input field is empty\r\n    if (\r\n      !inputName ||\r\n      (/^\\s*$/.test(inputName) && !inputAmount) ||\r\n      (/^\\s*$/.test(inputAmount) && !type) ||\r\n      (/^\\s*$/.test(type) && !description) ||\r\n      /^\\s*$/.test(description)\r\n    ) {\r\n      setError(\"Fields Can't remain empty\");\r\n      return;\r\n    }\r\n    const randomID = Math.floor(Math.random() * 999999);\r\n    let asd = new Date().toLocaleDateString(\"en-US\").split(\"/\");\r\n    let dateObj = { day: asd[1], month: asd[0], year: asd[2] };\r\n    // let months = [\r\n    //   \"null\",\r\n    //   \"January\",\r\n    //   \"February\",\r\n    //   \"March\",\r\n    //   \"April\",\r\n    //   \"May\",\r\n    //   \"June\",\r\n    //   \"July\",\r\n    //   \"August\",\r\n    //   \"September\",\r\n    //   \"October\",\r\n    //   \"November\",\r\n    //   \"December\",\r\n    // ];\r\n    const monthArr = [\r\n      \"null\",\r\n      \"01\",\r\n      \"02\",\r\n      \"03\",\r\n      \"04\",\r\n      \"05\",\r\n      \"06\",\r\n      \"07\",\r\n      \"08\",\r\n      \"09\",\r\n      \"10\",\r\n      \"11\",\r\n      \"12\",\r\n    ];\r\n    const timeStamp = `${dateObj.year}-${monthArr[dateObj.month]}-${\r\n      dateObj.day\r\n    }`;\r\n    const newTransaction = {\r\n      id: randomID,\r\n      name: inputName,\r\n      amount: Number(inputAmount),\r\n      type: type,\r\n      mode: mode,\r\n      description: description,\r\n      category: category,\r\n      timeStamp: timeStamp,\r\n    };\r\n\r\n    console.log(newTransaction);\r\n\r\n    transaction(newTransaction);\r\n\r\n    setInputName(\"\");\r\n    setInputAmount(\"\");\r\n    setType(\"\");\r\n    setMode(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <div className=\"col col-lg-6 col-md-6 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Name\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={inputName}\r\n            onChange={(e) => handleInputName(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-6 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Amount\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"number\"\r\n            className={[\"form-control\"]}\r\n            value={inputAmount}\r\n            onChange={(e) => handleInputAmount(e)}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 mt-auto col-6 position-relative\">\r\n          <div className=\"mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"5px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Type\r\n            </small>\r\n            <select\r\n              style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={type}\r\n              onChange={(e) => handleType(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"income\">Income</option>\r\n              <option value=\"expense\">Expense</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {expenseOption && (\r\n          <div className=\"col col-lg-3 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n            <small\r\n              className=\"position-absolute px-2\"\r\n              style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n            >\r\n              Mode\r\n            </small>\r\n            <select\r\n              style={{\r\n                border: \"1px solid black\",\r\n                padding: \"10px\",\r\n                wordSpacing: \"15px\",\r\n              }}\r\n              className=\"form-select m-auto\"\r\n              id=\"inputGroupSelect02\"\r\n              value={mode}\r\n              onChange={(e) => handleMode(e)}\r\n            >\r\n              <option>Select</option>\r\n              <option value=\"Cash\">Cash</option>\r\n              {cards.length > 0 ? (\r\n                cards.map((card) => {\r\n                  const cardDetail = `${card.type} **** ${card.number.slice(\r\n                    -4\r\n                  )}`;\r\n                  return (\r\n                    <option value={card.number} key={card.number}>\r\n                      {cardDetail}\r\n                    </option>\r\n                  );\r\n                })\r\n              ) : (\r\n                <h3>No Cards Added</h3>\r\n              )}\r\n            </select>\r\n          </div>\r\n        )}\r\n        <div className=\"col col-lg-4 col-md-3 col-sm-4 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Description\r\n          </small>\r\n          <input\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"m-auto\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={handleDescription}\r\n          />\r\n        </div>\r\n        <div className=\"col col-lg-4 col-md-2 col-6 position-relative mt-3\">\r\n          <small\r\n            className=\"position-absolute px-2\"\r\n            style={{ top: \"-10px\", left: \"20px\", backgroundColor: \"#fff\" }}\r\n          >\r\n            Category\r\n          </small>\r\n          <select\r\n            style={{ border: \"1px solid black\", padding: \"10px\" }}\r\n            className=\"form-select m-auto\"\r\n            id=\"inputGroupSelect02\"\r\n            value={category}\r\n            onChange={(e) => handleCategory(e)}\r\n          >\r\n            <option>Select</option>\r\n            <option value=\"wifi\">Wifi</option>\r\n            <option value=\"water\">Water</option>\r\n            <option value=\"tv\">Tv</option>\r\n            <option value=\"electricity\">Electricity</option>\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"shopping\">Shopping</option>\r\n            <option value=\"movie\">Movie</option>\r\n            <option value=\"mobile-recharge\">Mobile recharge</option>\r\n            <option value=\"train\">Train</option>\r\n            <option value=\"flight\">Flight</option>\r\n            <option value=\"bus\">Bus</option>\r\n            <option value=\"credit-card-bill\">Credit Card Bill</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </div>\r\n        <small className=\"text-danger fw-bold\">{error}</small>\r\n        <div className=\"col col-lg-1 col-md-2 col-sm-3 mt-auto\">\r\n          <button className=\"btn border-secondary mt-3\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\transactions\\New.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\TransactionsHome.js",["136"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalInput.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\InputField.js",["137","138","139"],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\ModalTransactionDetails.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Transactions\\New.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\BalanceHome.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Balance.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\balance\\Tip.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Balance\\Tip.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Login\\Login.js",[],"G:\\projects\\react\\react-expense-manager-PWA\\src\\components\\Account\\Signup\\Signup.js",["140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":98,"column":21,"nodeType":"150","endLine":98,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":118,"column":21,"nodeType":"150","endLine":118,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":186,"column":21,"nodeType":"150","endLine":186,"endColumn":45},{"ruleId":"148","severity":1,"message":"149","line":206,"column":21,"nodeType":"150","endLine":206,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":99,"column":21,"nodeType":"150","endLine":99,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":119,"column":21,"nodeType":"150","endLine":119,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":187,"column":21,"nodeType":"150","endLine":187,"endColumn":45},{"ruleId":"148","severity":1,"message":"149","line":207,"column":21,"nodeType":"150","endLine":207,"endColumn":45},{"ruleId":"148","severity":1,"message":"149","line":128,"column":13,"nodeType":"150","endLine":128,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":144,"column":13,"nodeType":"150","endLine":144,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":219,"column":13,"nodeType":"150","endLine":219,"endColumn":37},{"ruleId":"151","severity":1,"message":"155","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":128,"column":13,"nodeType":"150","endLine":128,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":144,"column":13,"nodeType":"150","endLine":144,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":219,"column":13,"nodeType":"150","endLine":219,"endColumn":37},{"ruleId":"151","severity":1,"message":"156","line":21,"column":30,"nodeType":"153","messageId":"154","endLine":21,"endColumn":51},{"ruleId":"151","severity":1,"message":"157","line":22,"column":20,"nodeType":"153","messageId":"154","endLine":22,"endColumn":31},{"ruleId":"151","severity":1,"message":"158","line":23,"column":24,"nodeType":"153","messageId":"154","endLine":23,"endColumn":39},{"ruleId":"151","severity":1,"message":"159","line":24,"column":25,"nodeType":"153","messageId":"154","endLine":24,"endColumn":41},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'AddNew' is defined but never used.","Identifier","unusedVar","'InputField' is defined but never used.","'setParentContactError' is assigned a value but never used.","'setDobError' is assigned a value but never used.","'setAddressError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]